# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist = py37, pycodestyle, pylint
skipsdist = true

[testenv]
basepython = python3.7

[testenv:py37]
setenv =
  POSTGRES_PORT=23456
commands_pre =
    sh -c '(cd nginx-ssl && docker build -t wazo/nginx-ssl:latest .)'
    docker-compose -f docker-compose.wazo-auth.yaml -f docker-compose.yaml -p wazo-router-confd-unittest up -d
commands =
    sh -c 'coverage run -m py.test -vv -p no:warnings wazo_router_confd {posargs} && coverage report && coverage html && coverage xml'
commands_post =
    docker-compose -p wazo-router-confd-unittest down --remove-orphans --volumes
deps =
    -rrequirements.txt
    docker-compose
whitelist_externals =
    sh

[testenv:pycodestyle]
# E501: line too long (80 chars)
commands =
    -sh -c 'pycodestyle --ignore=E501 wazo_router_confd > pycodestyle.txt'
deps =
    -rrequirements.txt
whitelist_externals =
    sh

[testenv:pylint]
commands =
    -sh -c 'pylint --rcfile=/usr/share/xivo-ci/pylintrc wazo_router_confd > pylint.txt'
deps =
    -rrequirements.txt
whitelist_externals =
    sh

[testenv:linters]
commands =
  black --skip-string-normalization --check wazo_router_confd
  mypy wazo_router_confd
  flake8 wazo_router_confd
deps =
    -r requirements.txt

[testenv:black]
skip_install = true
deps = black
commands = black --skip-string-normalization .

[flake8]
# E501: line too long (80 chars)
# W503: line break before binary operator
exclude = .tox,.eggs,alembic
show-source = true
ignore = E501, W503
max-line-length = 99
application-import-names = wazo_router_confd
